<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Destination_Delays_NoMonth++ (Multiple Connections)' inline='true' name='federated.1gnatdp0g60dk611vjakk1i7ns9k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DelaysInNew_York' name='excel-direct.0s7phyo1jefst313fg20j05zmg56'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abannem/Documents/GitHub/BRT/Group assignment/DelaysInNew_York.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='airports' name='textscan.1fvcvp51ptp98q13o8x361yy84za'>
            <connection class='textscan' directory='C:/Users/abannem/Documents/GitHub/BRT/Group assignment' filename='airports.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='IF [Destination_Delays_NoMonth+].[Table Name] = &apos;Destination_Delays_NoMonth&apos; THEN [Destination_Delays_NoMonth+].[OriginAirportAbbr]&#13;&#10;ELSE [Destination_Delays_NoMonth+].[DestAirportAbbr]&#13;&#10;END' />
              <expression op='[airports.csv].[faa]' />
            </expression>
          </clause>
          <relation all='true' name='Destination_Delays_NoMonth+' type='union'>
            <columns header='yes'>
              <column datatype='string' name='Origin_Airport' />
              <column datatype='string' name='Destination_Airport' />
              <column datatype='integer' name='MilesBetweenOrigin_Dest' />
              <column datatype='string' name='OriginAirportAbbr' />
              <column datatype='string' name='DestAirportAbbr' />
              <column datatype='real' name='AverageArrivalDelay' />
              <column datatype='string' name='Sheet' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='excel-direct.0s7phyo1jefst313fg20j05zmg56' name='Destination_Delays_NoMonth' table='[Destination_Delays_NoMonth$]' type='table'>
              <columns gridOrigin='A3:F217:no:A3:F217:0' header='yes' outcome='6'>
                <column datatype='string' name='Origin_Airport' ordinal='0' />
                <column datatype='string' name='Destination_Airport' ordinal='1' />
                <column datatype='integer' name='MilesBetweenOrigin_Dest' ordinal='2' />
                <column datatype='string' name='OriginAirportAbbr' ordinal='3' />
                <column datatype='string' name='DestAirportAbbr' ordinal='4' />
                <column datatype='real' name='AverageArrivalDelay' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0s7phyo1jefst313fg20j05zmg56' name='Destination_Delays_NoMonth1' table='[Destination_Delays_NoMonth$]' type='table'>
              <columns gridOrigin='A3:F217:no:A3:F217:0' header='yes' outcome='6'>
                <column datatype='string' name='Origin_Airport' ordinal='0' />
                <column datatype='string' name='Destination_Airport' ordinal='1' />
                <column datatype='integer' name='MilesBetweenOrigin_Dest' ordinal='2' />
                <column datatype='string' name='OriginAirportAbbr' ordinal='3' />
                <column datatype='string' name='DestAirportAbbr' ordinal='4' />
                <column datatype='real' name='AverageArrivalDelay' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1fvcvp51ptp98q13o8x361yy84za' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='faa' ordinal='1' />
              <column datatype='string' name='name' ordinal='2' />
              <column datatype='real' name='lat' ordinal='3' />
              <column datatype='real' name='lon' ordinal='4' />
              <column datatype='integer' name='alt' ordinal='5' />
              <column datatype='integer' name='tz' ordinal='6' />
              <column datatype='string' name='dst' ordinal='7' />
              <column datatype='string' name='tzone' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin_Airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin_Airport]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>Origin_Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination_Airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Destination_Airport]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>Destination_Airport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MilesBetweenOrigin_Dest</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MilesBetweenOrigin_Dest]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>MilesBetweenOrigin_Dest</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportAbbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OriginAirportAbbr]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>OriginAirportAbbr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportAbbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DestAirportAbbr]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>DestAirportAbbr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageArrivalDelay]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>AverageArrivalDelay</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Destination_Delays_NoMonth+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>faa</remote-name>
            <remote-type>129</remote-type>
            <local-name>[faa]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>faa</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[alt]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>alt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tz</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tz]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>tz</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dst</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dst]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>dst</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tzone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tzone]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>tzone</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
      <column caption='Route Identifier' datatype='string' name='[Calculation_993606715163594752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[OriginAirportAbbr] + &quot;_&quot; + [DestAirportAbbr]' />
      </column>
      <column caption='Route Order' datatype='string' name='[Calculation_993606715164061697]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &apos;Destination_Delays_NoMonth&apos; THEN &apos;1&apos;&#13;&#10;ELSE &apos;2&apos;&#13;&#10;END' />
      </column>
      <column caption='Route Location' datatype='string' name='[Calculation_993606715164667906]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &apos;Destination_Delays_NoMonth&apos; THEN [OriginAirportAbbr]&#13;&#10;ELSE [DestAirportAbbr]&#13;&#10;END' />
      </column>
      <column caption='Dest Airport Abbr' datatype='string' name='[DestAirportAbbr]' role='dimension' type='nominal' />
      <column caption='Destination Airport' datatype='string' name='[Destination_Airport]' role='dimension' type='nominal' />
      <column caption='MilesBetweenOrigin Dest' datatype='integer' name='[MilesBetweenOrigin_Dest]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport Abbr' datatype='string' name='[OriginAirportAbbr]' role='dimension' type='nominal' />
      <column caption='Origin Airport' datatype='string' name='[Origin_Airport]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Sheet]' role='dimension' type='nominal' />
      <column caption='Alt' datatype='integer' name='[alt]' role='measure' type='quantitative' />
      <column caption='Dst' datatype='string' name='[dst]' role='dimension' type='nominal' />
      <column caption='Faa' datatype='string' name='[faa]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Tz' datatype='integer' name='[tz]' role='measure' type='quantitative' />
      <column caption='Tzone' datatype='string' name='[tzone]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.688612' measure-ordering='alphabetic' measure-percentage='0.311388' show-structure='false' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Origin_Airport' />
        <field-sort-custom-order field='Destination_Airport' />
        <field-sort-custom-order field='MilesBetweenOrigin_Dest' />
        <field-sort-custom-order field='OriginAirportAbbr' />
        <field-sort-custom-order field='Calculation_993606715163594752' />
        <field-sort-custom-order field='DestAirportAbbr' />
        <field-sort-custom-order field='AverageArrivalDelay' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Calculation_993606715164667906' />
        <field-sort-custom-order field='Calculation_993606715164061697' />
      </field-sort-info>
    </datasource>
    <datasource caption='.LN00078 (DelaysByAirlinesCompanies)' inline='true' name='federated.0cvnob40pyyyna11k3y6n0cabmx8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DelaysInNew_York' name='excel-direct.1ghc0ba1pcgdmi16gdrin0fbopx9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abannem/Documents/GitHub/BRT/Group assignment/DelaysInNew_York.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[DelaysByAirlines].[AverageArrivalDelay]' />
              <expression op='[DelaysByAirport].[AverageArrivalDelay]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1ghc0ba1pcgdmi16gdrin0fbopx9' name='DelaysByAirlines' table='[DelaysByAirlines$]' type='table'>
            <columns gridOrigin='A3:C19:no:A3:C19:0' header='yes' outcome='2'>
              <column datatype='real' name='AverageArrivalDelay' ordinal='0' />
              <column datatype='real' name='AverageDepartureDelay' ordinal='1' />
              <column datatype='string' name='name' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ghc0ba1pcgdmi16gdrin0fbopx9' name='DelaysByAirport' table='[DelaysByAirport$]' type='table'>
            <columns gridOrigin='A3:D6:no:A3:D6:0' header='yes' outcome='2'>
              <column datatype='string' name='AirportName' ordinal='0' />
              <column datatype='string' name='AirportsAbbr' ordinal='1' />
              <column datatype='real' name='AverageDepartureDelay' ordinal='2' />
              <column datatype='real' name='AverageArrivalDelay' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AirportName]' value='[DelaysByAirport].[AirportName]' />
          <map key='[AirportsAbbr]' value='[DelaysByAirport].[AirportsAbbr]' />
          <map key='[AverageArrivalDelay (DelaysByAirport)]' value='[DelaysByAirport].[AverageArrivalDelay]' />
          <map key='[AverageArrivalDelay]' value='[DelaysByAirlines].[AverageArrivalDelay]' />
          <map key='[AverageDepartureDelay (DelaysByAirport)]' value='[DelaysByAirport].[AverageDepartureDelay]' />
          <map key='[AverageDepartureDelay]' value='[DelaysByAirlines].[AverageDepartureDelay]' />
          <map key='[name]' value='[DelaysByAirlines].[name]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>AverageArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageArrivalDelay]</local-name>
            <parent-name>[DelaysByAirlines]</parent-name>
            <remote-alias>AverageArrivalDelay</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageDepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageDepartureDelay]</local-name>
            <parent-name>[DelaysByAirlines]</parent-name>
            <remote-alias>AverageDepartureDelay</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[DelaysByAirlines]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DelaysByAirlines]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A3:C19:no:A3:C19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirportName]</local-name>
            <parent-name>[DelaysByAirport]</parent-name>
            <remote-alias>AirportName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportsAbbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirportsAbbr]</local-name>
            <parent-name>[DelaysByAirport]</parent-name>
            <remote-alias>AirportsAbbr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageDepartureDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageDepartureDelay (DelaysByAirport)]</local-name>
            <parent-name>[DelaysByAirport]</parent-name>
            <remote-alias>AverageDepartureDelay</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageArrivalDelay (DelaysByAirport)]</local-name>
            <parent-name>[DelaysByAirport]</parent-name>
            <remote-alias>AverageArrivalDelay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DelaysByAirport]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A3:D6:no:A3:D6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
      <column caption='Airports Abbr' datatype='string' name='[AirportsAbbr]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
      <column caption='Departure Delay' datatype='real' name='[AverageDepartureDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airlines_Companies' datatype='string' name='[name]' role='dimension' semantic-role='' type='nominal' />
      <column-instance column='[AverageArrivalDelay]' derivation='Avg' name='[avg:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageDepartureDelay]' derivation='Avg' name='[avg:AverageDepartureDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[AverageArrivalDelay]' derivation='Sum' name='[sum:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageDepartureDelay]' derivation='Sum' name='[sum:AverageDepartureDelay:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/abannem/Documents/My Tableau Repository/Datasources/.LN00078 (DelaysByAirlinesCompanies).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/23/2019 06:19:35 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[AirportName]' value='[Extract].[AirportName]' />
            <map key='[AirportsAbbr]' value='[Extract].[AirportsAbbr]' />
            <map key='[AverageArrivalDelay (DelaysByAirport)]' value='[Extract].[AverageArrivalDelay]' />
            <map key='[AverageArrivalDelay]' value='[Extract].[AverageArrivalDelay1]' />
            <map key='[AverageDepartureDelay (DelaysByAirport)]' value='[Extract].[AverageDepartureDelay]' />
            <map key='[AverageDepartureDelay]' value='[Extract].[AverageDepartureDelay1]' />
            <map key='[name]' value='[Extract].[name]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='19' timestamp-start='2019-10-23 06:19:35.544' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AverageArrivalDelay1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageArrivalDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AverageArrivalDelay1</remote-alias>
              <ordinal>0</ordinal>
              <family>DelaysByAirlines</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageDepartureDelay1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageDepartureDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AverageDepartureDelay1</remote-alias>
              <ordinal>1</ordinal>
              <family>DelaysByAirlines</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>2</ordinal>
              <family>DelaysByAirlines</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirportName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirportName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirportName</remote-alias>
              <ordinal>3</ordinal>
              <family>DelaysByAirport</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirportsAbbr</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirportsAbbr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirportsAbbr</remote-alias>
              <ordinal>4</ordinal>
              <family>DelaysByAirport</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageDepartureDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageDepartureDelay (DelaysByAirport)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AverageDepartureDelay</remote-alias>
              <ordinal>5</ordinal>
              <family>DelaysByAirport</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AverageArrivalDelay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AverageArrivalDelay (DelaysByAirport)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AverageArrivalDelay</remote-alias>
              <ordinal>6</ordinal>
              <family>DelaysByAirport</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.38968' measure-ordering='alphabetic' measure-percentage='0.61032' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[pcrk:avg:AverageArrivalDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[pcto:avg:AverageArrivalDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[sum:AverageArrivalDelay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageDepartureDelay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[pcrk:sum:AverageDepartureDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[sum:AverageDepartureDelay:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;SkyWest Airlines Inc.&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Mesa Airlines Inc.&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;ExpressJet Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Envoy Air&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Endeavor Air Inc.&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;AirTran Airways Corporation&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='DelaysByDestination (DelaysInNew_York)' inline='true' name='federated.0tokavo0zh78wc1atrlnz0grp1zc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DelaysInNew_York' name='excel-direct.07hlew10blb8iz17nn0j214tx4fa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abannem/Documents/GitHub/BRT/Group assignment/DelaysInNew_York.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07hlew10blb8iz17nn0j214tx4fa' name='DelaysByDestination' table='[DelaysByDestination$]' type='table'>
          <columns gridOrigin='A3:F2187:no:A3:F2187:0' header='yes' outcome='6'>
            <column datatype='string' name='Destination_Airport' ordinal='0' />
            <column datatype='string' name='Origin_Airport' ordinal='1' />
            <column datatype='integer' name='MilesBetweenOrigin_Dest' ordinal='2' />
            <column datatype='string' name='AirportAbbr' ordinal='3' />
            <column datatype='real' name='AverageArrivalDelay' ordinal='4' />
            <column datatype='integer' name='Month' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Destination_Airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Destination_Airport]</local-name>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias>Destination_Airport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin_Airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin_Airport]</local-name>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias>Origin_Airport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MilesBetweenOrigin_Dest</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MilesBetweenOrigin_Dest]</local-name>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias>MilesBetweenOrigin_Dest</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportAbbr</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirportAbbr]</local-name>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias>AirportAbbr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AverageArrivalDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AverageArrivalDelay]</local-name>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias>AverageArrivalDelay</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DelaysByDestination]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A3:F2187:no:A3:F2187:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airport Abbr' datatype='string' name='[AirportAbbr]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
      <column caption='Destination Airport' datatype='string' name='[Destination_Airport]' role='dimension' type='nominal' />
      <column caption='MilesBetweenOrigin Dest' datatype='integer' name='[MilesBetweenOrigin_Dest]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport' datatype='string' name='[Origin_Airport]' role='dimension' type='nominal' />
      <column-instance column='[MilesBetweenOrigin_Dest]' derivation='Avg' name='[avg:MilesBetweenOrigin_Dest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AverageArrivalDelay]' derivation='Sum' name='[sum:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MilesBetweenOrigin_Dest]' derivation='Sum' name='[sum:MilesBetweenOrigin_Dest:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.47331' measure-ordering='alphabetic' measure-percentage='0.52669' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tokavo0zh78wc1atrlnz0grp1zc].[sum:AverageArrivalDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:MilesBetweenOrigin_Dest:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tokavo0zh78wc1atrlnz0grp1zc].[sum:MilesBetweenOrigin_Dest:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='DelaysPerTimeZone (DelaysInNew_York)' inline='true' name='federated.0zpigfg06ys68117um7u40lkw6ih' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DelaysInNew_York' name='excel-direct.166f8660kxov3c1dnncum0y21ga3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abannem/Documents/GitHub/BRT/Group assignment/DelaysInNew_York.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.166f8660kxov3c1dnncum0y21ga3' name='DelaysPerTimeZone' table='[DelaysPerTimeZone$]' type='table'>
          <columns gridOrigin='A3:D77:no:A3:D77:0' header='yes' outcome='2'>
            <column datatype='string' name='tzone' ordinal='0' />
            <column datatype='real' name='AvgArrDelay' ordinal='1' />
            <column datatype='integer' name='Month' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>tzone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tzone]</local-name>
            <parent-name>[DelaysPerTimeZone]</parent-name>
            <remote-alias>tzone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvgArrDelay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvgArrDelay]</local-name>
            <parent-name>[DelaysPerTimeZone]</parent-name>
            <remote-alias>AvgArrDelay</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[DelaysPerTimeZone]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DelaysPerTimeZone]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DelaysPerTimeZone]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A3:D77:no:A3:D77:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Arr Delay' datatype='real' name='[AvgArrDelay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Tzone' datatype='string' name='[tzone]' role='dimension' semantic-role='' type='nominal' />
      <column-instance column='[tzone]' derivation='None' name='[none:tzone:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.52847' measure-ordering='alphabetic' measure-percentage='0.47153' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:tzone:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;America/Anchorage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;America/New_York&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;America/Los_Angeles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pacific/Honolulu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;America/Denver&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;America/Phoenix&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;America/Chicago&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='WorstRoute For Time Zone' type='sheet' worksheet='Worst Routes (TimeZone Incl)' />
      <command command='tsc:brush'>
        <param name='exclude' value='Worst Routes (TimeZone Incl)' />
        <param name='field-captions' value='Tzone' />
        <param name='target' value='WorstRoute For Time Zone' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='DelaysPerDestination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Calibri' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DelaysByDestination (DelaysInNew_York)' name='federated.0tokavo0zh78wc1atrlnz0grp1zc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tokavo0zh78wc1atrlnz0grp1zc'>
            <column caption='Airport Abbr' datatype='string' name='[AirportAbbr]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
            <column caption='Destination Airport' datatype='string' name='[Destination_Airport]' role='dimension' type='nominal' />
            <column caption='MilesBetweenOrigin Dest' datatype='integer' name='[MilesBetweenOrigin_Dest]' role='measure' type='quantitative' />
            <column caption='Origin Airport' datatype='string' name='[Origin_Airport]' role='dimension' type='nominal' />
            <column-instance column='[AverageArrivalDelay]' derivation='Avg' name='[avg:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilesBetweenOrigin_Dest]' derivation='Avg' name='[avg:MilesBetweenOrigin_Dest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageArrivalDelay]' derivation='Max' name='[max:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirportAbbr]' derivation='None' name='[none:AirportAbbr:nk]' pivot='key' type='nominal' />
            <column-instance column='[Destination_Airport]' derivation='None' name='[none:Destination_Airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin_Airport]' derivation='None' name='[none:Origin_Airport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[max:AverageArrivalDelay:qk]' included-values='in-range'>
            <min>50.0</min>
            <max>66.685699999999997</max>
          </filter>
          <slices>
            <column>[federated.0tokavo0zh78wc1atrlnz0grp1zc].[max:AverageArrivalDelay:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[Longitude (generated)]' field-type='quantitative' max='-6751680.1120771524' min='-18133483.020878363' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[Latitude (generated)]' field-type='quantitative' max='8769894.336371161' min='2155302.4939310676' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:AverageArrivalDelay:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:AverageArrivalDelay:qk]' />
              <size column='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:MilesBetweenOrigin_Dest:qk]' />
              <lod column='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[none:AirportAbbr:nk]' />
              <lod column='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[none:Origin_Airport:nk]' />
              <lod column='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[none:Destination_Airport:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3513259887695313' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tokavo0zh78wc1atrlnz0grp1zc].[Latitude (generated)]</rows>
        <cols>[federated.0tokavo0zh78wc1atrlnz0grp1zc].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='DelaysPerTimeZone'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Calibri' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DelaysPerTimeZone (DelaysInNew_York)' name='federated.0zpigfg06ys68117um7u40lkw6ih' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zpigfg06ys68117um7u40lkw6ih'>
            <column caption='Avg Arr Delay' datatype='real' name='[AvgArrDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column-instance column='[AvgArrDelay]' derivation='Avg' name='[avg:AvgArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tzone]' derivation='None' name='[none:tzone:nk]' pivot='key' type='nominal' />
            <column caption='Tzone' datatype='string' name='[tzone]' role='dimension' semantic-role='' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zpigfg06ys68117um7u40lkw6ih].[none:tzone:nk]' />
              <text column='[federated.0zpigfg06ys68117um7u40lkw6ih].[none:tzone:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zpigfg06ys68117um7u40lkw6ih].[avg:AvgArrDelay:qk]</rows>
        <cols>[federated.0zpigfg06ys68117um7u40lkw6ih].[none:Month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delays_By_AirlinesComp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Calibri' fontsize='18'>Average departure and arrival delays by airlines companies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='.LN00078 (DelaysByAirlinesCompanies)' name='federated.0cvnob40pyyyna11k3y6n0cabmx8' />
          </datasources>
          <datasource-dependencies datasource='federated.0cvnob40pyyyna11k3y6n0cabmx8'>
            <column caption='Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
            <column caption='Departure Delay' datatype='real' name='[AverageDepartureDelay]' role='measure' type='quantitative' />
            <column-instance column='[AverageArrivalDelay]' derivation='Avg' name='[avg:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AverageDepartureDelay]' derivation='Avg' name='[avg:AverageDepartureDelay:qk]' pivot='key' type='quantitative' />
            <column caption='Airlines_Companies' datatype='string' name='[name]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageDepartureDelay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageDepartureDelay:qk]&quot;</bucket>
              <bucket>&quot;[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageDepartureDelay:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[:Measure Names]</column>
            <column>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay:qk]</column>
            <column>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageDepartureDelay:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Multiple Values]' scope='rows' value='Avg Delays (Arr and Dep)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[:Measure Names]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:name:nk]' />
              <text column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Multiple Values]</rows>
        <cols>([federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:name:nk] / [federated.0cvnob40pyyyna11k3y6n0cabmx8].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Map of Delays by Airports'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Calibri' fontsize='18'>Map of Delays by Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='.LN00078 (DelaysByAirlinesCompanies)' name='federated.0cvnob40pyyyna11k3y6n0cabmx8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cvnob40pyyyna11k3y6n0cabmx8'>
            <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
            <column caption='Airports Abbr' datatype='string' name='[AirportsAbbr]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='real' name='[AverageArrivalDelay (DelaysByAirport)]' role='measure' type='quantitative' />
            <column-instance column='[AverageArrivalDelay (DelaysByAirport)]' derivation='Avg' name='[avg:AverageArrivalDelay (DelaysByAirport):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirportName]' derivation='None' name='[none:AirportName:nk]' pivot='key' type='nominal' />
            <column-instance column='[AirportsAbbr]' derivation='None' name='[none:AirportsAbbr:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Latitude (generated)]</column>
            <column>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Longitude (generated)]' field-type='quantitative' max='-8188233.9729937315' min='-8287208.39699696' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Latitude (generated)]' field-type='quantitative' max='4999094.8176011946' min='4940618.185437819' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportsAbbr:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportsAbbr:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportsAbbr:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' />
              <size column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' />
              <text column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportName:nk]' />
              <text column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' />
              <lod column='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportsAbbr:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Latitude (generated)]</rows>
        <cols>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Worst Routes'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Calibri' fontsize='18'>Worst Routes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Destination_Delays_NoMonth++ (Multiple Connections)' name='federated.1gnatdp0g60dk611vjakk1i7ns9k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gnatdp0g60dk611vjakk1i7ns9k'>
            <column caption='Average Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
            <column caption='Route Identifier' datatype='string' name='[Calculation_993606715163594752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginAirportAbbr] + &quot;_&quot; + [DestAirportAbbr]' />
            </column>
            <column caption='Route Order' datatype='string' name='[Calculation_993606715164061697]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &apos;Destination_Delays_NoMonth&apos; THEN &apos;1&apos;&#13;&#10;ELSE &apos;2&apos;&#13;&#10;END' />
            </column>
            <column caption='Dest Airport Abbr' datatype='string' name='[DestAirportAbbr]' role='dimension' type='nominal' />
            <column caption='Origin Airport Abbr' datatype='string' name='[OriginAirportAbbr]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[AverageArrivalDelay]' derivation='Avg' name='[avg:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='Avg' name='[avg:lon:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[AverageArrivalDelay]' derivation='Max' name='[max:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_993606715163594752]' derivation='None' name='[none:Calculation_993606715163594752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_993606715164061697]' derivation='None' name='[none:Calculation_993606715164061697:nk]' pivot='key' type='nominal' />
            <column-instance column='[OriginAirportAbbr]' derivation='None' name='[none:OriginAirportAbbr:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[max:AverageArrivalDelay:qk]' included-values='in-range'>
            <min>50.0</min>
            <max>53.330300000000001</max>
          </filter>
          <filter class='categorical' column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]'>
            <groupfilter function='level-members' level='[none:OriginAirportAbbr:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]</column>
            <column>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[max:AverageArrivalDelay:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lon:qk]' field-type='quantitative' max='-7461866.2470809575' min='-11922312.825649017' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]' field-type='quantitative' max='5608999.6637424305' min='2993083.1757343789' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]' field-type='quantitative' fold='true' max='5608999.6637424305' min='2993083.1757343789' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' />
              <path column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715164061697:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' />
              <size column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715164061697:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk] + [federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk])</rows>
        <cols>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Worst Routes (TimeZone Incl)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Calibri' fontsize='18'>Worst Routes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Destination_Delays_NoMonth++ (Multiple Connections)' name='federated.1gnatdp0g60dk611vjakk1i7ns9k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gnatdp0g60dk611vjakk1i7ns9k'>
            <column caption='Average Arrival Delay' datatype='real' name='[AverageArrivalDelay]' role='measure' type='quantitative' />
            <column caption='Route Identifier' datatype='string' name='[Calculation_993606715163594752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[OriginAirportAbbr] + &quot;_&quot; + [DestAirportAbbr]' />
            </column>
            <column caption='Route Order' datatype='string' name='[Calculation_993606715164061697]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &apos;Destination_Delays_NoMonth&apos; THEN &apos;1&apos;&#13;&#10;ELSE &apos;2&apos;&#13;&#10;END' />
            </column>
            <column caption='Dest Airport Abbr' datatype='string' name='[DestAirportAbbr]' role='dimension' type='nominal' />
            <column caption='Origin Airport Abbr' datatype='string' name='[OriginAirportAbbr]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[AverageArrivalDelay]' derivation='Avg' name='[avg:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='Avg' name='[avg:lon:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[AverageArrivalDelay]' derivation='Max' name='[max:AverageArrivalDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_993606715163594752]' derivation='None' name='[none:Calculation_993606715163594752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_993606715164061697]' derivation='None' name='[none:Calculation_993606715164061697:nk]' pivot='key' type='nominal' />
            <column-instance column='[OriginAirportAbbr]' derivation='None' name='[none:OriginAirportAbbr:nk]' pivot='key' type='nominal' />
            <column-instance column='[tzone]' derivation='None' name='[none:tzone:nk]' pivot='key' type='nominal' />
            <column caption='Tzone' datatype='string' name='[tzone]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[max:AverageArrivalDelay:qk]' included-values='in-range'>
            <min>50.0</min>
            <max>53.330300000000001</max>
          </filter>
          <filter class='categorical' column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]'>
            <groupfilter function='level-members' level='[none:OriginAirportAbbr:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]</column>
            <column>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[max:AverageArrivalDelay:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lon:qk]' field-type='quantitative' max='-7461866.2470809575' min='-11922312.825649017' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]' field-type='quantitative' max='5608999.6637424305' min='2993083.1757343789' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]' field-type='quantitative' fold='true' max='5608999.6637424305' min='2993083.1757343789' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:tzone:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' />
              <path column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715164061697:nk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:tzone:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' />
              <size column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715164061697:nk]' />
              <lod column='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:tzone:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk] + [federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lat:qk])</rows>
        <cols>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:lon:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='WorstRoute For Time Zone'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Destination_Delays_NoMonth++ (Multiple Connections)' name='federated.1gnatdp0g60dk611vjakk1i7ns9k' />
      </datasources>
      <datasource-dependencies datasource='federated.1gnatdp0g60dk611vjakk1i7ns9k'>
        <column caption='Origin Airport Abbr' datatype='string' name='[OriginAirportAbbr]' role='dimension' type='nominal' />
        <column-instance column='[OriginAirportAbbr]' derivation='None' name='[none:OriginAirportAbbr:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='7' name='DelaysPerTimeZone' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Worst Routes (TimeZone Incl)' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='26125' id='8' name='DelaysPerTimeZone' pane-specification-id='0' param='[federated.0zpigfg06ys68117um7u40lkw6ih].[none:tzone:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8750' id='10' mode='dropdown' name='Worst Routes (TimeZone Incl)' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]' type='filter' w='16000' x='83200' y='27125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26125' id='11' name='Worst Routes (TimeZone Incl)' pane-specification-id='2' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' type='size' w='16000' x='83200' y='35875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10125' id='12' name='Worst Routes (TimeZone Incl)' pane-specification-id='1' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' type='color' w='16000' x='83200' y='62000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='13' name='Worst Routes (TimeZone Incl)' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' type='highlighter' w='16000' x='83200' y='72125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Delays_By_AirlinesComp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay:qk]</field>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:name:nk]</field>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[sum:AverageArrivalDelay:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Map of Delays by Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[avg:AverageArrivalDelay (DelaysByAirport):qk]</field>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportName:nk]</field>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:AirportsAbbr:nk]</field>
            <field>[federated.0cvnob40pyyyna11k3y6n0cabmx8].[none:name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='DelaysPerDestination'>
      <cards>
        <edge name='left'>
          <strip size='124'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:AverageArrivalDelay:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:MilesBetweenOrigin_Dest:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tokavo0zh78wc1atrlnz0grp1zc].[avg:AverageArrivalDelay:qk]</field>
            <field>[federated.0tokavo0zh78wc1atrlnz0grp1zc].[none:Destination_Airport:nk]</field>
            <field>[federated.0tokavo0zh78wc1atrlnz0grp1zc].[none:Origin_Airport:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='DelaysPerTimeZone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zpigfg06ys68117um7u40lkw6ih].[none:tzone:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zpigfg06ys68117um7u40lkw6ih].[none:Month:qk]</field>
            <field>[federated.0zpigfg06ys68117um7u40lkw6ih].[none:tzone:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Worst Routes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' type='color' />
            <card param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715164061697:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:DestAirportAbbr:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:tzone:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Worst Routes (TimeZone Incl)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]' type='color' />
            <card param='[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[avg:AverageArrivalDelay:qk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715163594752:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:Calculation_993606715164061697:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:DestAirportAbbr:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:OriginAirportAbbr:nk]</field>
            <field>[federated.1gnatdp0g60dk611vjakk1i7ns9k].[none:tzone:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorstRoute For Time Zone'>
      <viewpoints>
        <viewpoint name='DelaysPerTimeZone'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zpigfg06ys68117um7u40lkw6ih].[none:tzone:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Worst Routes (TimeZone Incl)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='DelaysPerDestination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DelaysPerTimeZone' width='192'>
      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
      v5VGu/8F8QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delays_By_AirlinesComp' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3AcV57n+cks733BAzQASNCCFI1IGba8aTPTo9b0zV3Pxc7MRV9PxNxE
      3Nzs7dzE/aHduYvdi909E9vb0zPbd309bca0unXqliiJMpTE1lKGHgQIX6gqFAooFFDeZ1Xe
      HxAhGgCiKYKg8D5/AVmZv/ym+ebLfO/93pNUVVURCNYp8t0WIBDcTYQBBOsaYQDBXSGfnmNo
      LARAoO8jRqaSi79Fhs4xMpXg/Xdep6TcSnSVmclxLgwM83lv+NpbCS8Q3C4nXvsVxy7O8K//
      6i+wOLxg1TExEaKSy5KMjJBp8NDc2ArlFGOhOWZjc/Tu20clPUPfSJQD+3vJxiNcHJlk1977
      sJt0i7HHzrzD378zQE97Ezu6N3D29CkaN+/ArS8TnkkwnynR7NCQwSoMILgLqArBRIXnDjZz
      ejRBre8k2l1HeOP7/45NB55li2NhtXfffB3/15/gu//Pa9zXomFW0TL4/lG6Nzfy46k0s+ff
      YPPu/UzHU9jbvIvhT54e4A//m2/T7DTwyt99l6S1g1eO/Ue++ez9/PStSziKQaydB5kaHhCv
      QILVJzs9yienTnH0xBlOfvDB4nL/xl38l994Gt016/cePMLDB3eST82TLlWx+dvw2w08+dSj
      jF/qIxidu2p9u1FDJDZPtVJmeq7EM88+zeYGG+limfsOf4n7dvVw5PFnafYYhQEEq08oMMF/
      +xd/xV/9m3+PT05hdrgw63V4fT6QwGRzYjXp8Hh9aHQmXHYzepMNt7+Vg1ubef/9D5ENBoaH
      BslXJDwu21XxH/vyb/OfX/4h/+v/9n/xxJMP8B/+9V+Rs7TR1uDFbjFidbgwaCU8Xh/SarUD
      VKtVJElClte+5xRFQatd+2+H94pOuLNa86kYp84OUANknYEDBw9hvMFdrZoB8vk8Go0Gg8Gw
      Gru7LRKJBC6X627L+FzuFZ2wdrWu/cexQHAHEQYQrGuEAQTrGmEAwbpGGECwrrkrBohNBUnm
      ygDE43EuV0NVSln6zp3l9OnTDIwEbipmMhZhNpVfjFkX1BojI2OoQCWXZGo2seyqgWBwxVC1
      co7R4BSqCqVcmnShvPhbKRtnajZLcj6OUrsFmdUyY+NBajdVn6fe0nkKjI5QUYGaQnwuecUv
      CsHAJMVsgmxhqQ48VfrPnaH/0jDFSvWa3yoEAxGKmXkyxWt/+4xYJEQqXwKWvsap+QSXt56P
      x2/ofNyFSmSVyclJ5LkivTu3oALVfIJYpkKporKzdwcff3SBbV0bmY3PUsqksfkamQkHqOls
      dG9sJhwOkUrn2dS9FatRB6pKaDJCSUrg3bMDAKWcZ34+RbpYxWbW43WaCU5laGuwkKloyMTC
      pMsSW7d0o9NISyotzIWZCIRwtmzAphTJ5FUy8zHGw1GaOzqx6RRGRifwtmwglUqh1qpMz8Rx
      WHSMBkL4WjbS5F1o148EgwSjKTa2N10+DczGZ8nMzeHyWMjmZUxWoFZgfDxKNp+nc2sPSjbO
      xGSczq1bMOuXvlzJWISJiTCepmYM5QSTsxmUGujUEgZHA80eC8NDwzga2nAbIF0skVc0WPWg
      1qoEx0YoaSy0+yyMjIfxtXRgkxViqSSFskxP9yZkCWrlFJFggIrJT3eLBWoq8bk4tVIOTHZS
      qQwNXgsseToVqpKZ7nYfp0+d5f6DewiNDVPV2dm8wUsqlSUzdZ5I1c++3T0U5qeYz1XZsrUb
      g1ZGVRUmIyGkRJk9OzoBKBfSzCdzFKsyG1obmAqH2eR2oQHUhRuLQChCWTXQvamVcGCUgmqk
      a2MLgeFBKlrr6pcASmYag6cTSclTVSEyNUUlPcOZwQhNfs9V644PXqAom7Aa9didbrKRIWKZ
      ElOzKXo2NzA6Mb0Qs5hGY/Fh1iiUlRqRqQiVQoYzF4ZobPQzGQ6TiEaYmIkxE52kUpOw2Bzo
      qynGwvPLag1Op3jgob1Exj8rjTQ6A16Pi0v9/UxNjGL2NuOwGFCVEv0XzoPehKzV4fF6GRzo
      +3QrlWS+wv4uL6PRLPnMHIl0kUvnT6G1+zBoFtaanYpQKeeIzJXo7PASDE5yaTjE1i0bGOgf
      XFbnzFyaA3u7CU/GyM5NolobqaZmcLVuZjYaZmTgIv6N3cRDo8zPRukbn6bJ72ZqKkIsPEbV
      4mdDix9Jo8PjcTM4MEBiOgpWL/Zagvniwn4iE2F67n+I3GwIUJiKzBINjjKTVvA4LADk52dJ
      XFG6XYvR4sJrgcj4KCWTH30xxnR6Yf3Gpia6enbisZswWe1YyDAYWnjSl9LzWHyb0SgZlJrK
      VCRCMRPn/FCYhmvuG4DpyBQ1JYPF24ycjRONhknXLDjVeUanZphJVGhu8Ky+AcYCkxRSUdLJ
      OaYThcXlXVt7MF7zhDPavXR2NJOcCRPPlHDYDJQqYLXb0el0SJ+WcbOREPPJedLzccLxzKdb
      S2zq6sZq1GPVyoSyNbo8OkJzJeyaDKORJBa7jVq5srRQVWE2FmNoaJzZ+Mzi4qGhITQ6A3qt
      TEf3DrSlFP1DYyDJVJUyskbL2PAwaHQYPj2eaiFJbC7B+EyG2fDYYiy7r4W2pusvnt1uR6PV
      I6llknNxBi6NYLHZrltvQWaRmdk4YxNRZqNhQMZqsWA0WTAZDGhkmWwuy8TwIGVZB6rElq1b
      MWgXXFeqVLBZzRgMBkaHh5C0eow6LSoaHA4rOr2G2qevZdHZOKHhQWZjs5Quv6rpLWzr3oTm
      Ru8ktUauWKNayhMNjxPP1dBLl99VFooOpZRlPDiFzWZDqS68Tk2GwiTno8zH48QznzpS0tDV
      3Y1pmZIRwG4zo9NqKOYLTEeCTKUV7GYHWzb56b/Yh+aFF1544Qal3xaVSgVZlskUKmzf1kNL
      o4/5VBaDXoPTYkTRWrEbNYBKLlfE43VTKBRwOV3IUo1IZIqyouBpbEVWazhtJgolcDnMxBIZ
      du/YQWtHM/Mzc5hMehx2KxVVg91qwmGC8LzCpjYv88kS7c0NzEQjFEoVHC4f0eAYrgY7A30B
      /A0eisUi2loRydFCT+dGTGoJ1WhDlrXoaiXmkmkkrRGjrDAdT2JzejCbDGzdsoXg+Dh2q5HY
      XBJV0tHa3Ehqfo6GDd1s6mijlE9jt9tAa0JCwe10UqtWUNCj11Sx2m2UKzIOq55KVYvXoSdX
      VLA5XKSnA8hWL8ODgzT4fRSLRaRaCaOzle7OjVApYDSb0JpdyEoBi8NFuVhgY0czsXgSvcGE
      12FDa7Zi1msoFPK0trYxeqmfuUwRp0W7oFvW4XPZ0dvsyJUiWrMLg1SgVDOxrWcLXquGTFWH
      pqZiMGpxOJzIEhTyZawWA5LRSnD4Ei6vi4GBUfx+L8VinqmJAPFEAn/bZtpaG0jOxpG0OvwN
      fqplhYamBkYG+zE7POQSMfKlMmaHD4/NRCJTYMeO7XS0eJmJ5zDpZWxWMzXZiNWsByCfjjMR
      nqJclTFqZewOK2iMKMUC7uY2iql5QMbtdhAOTaIxmERXiKVYq83213Kv6IS1q3VVP4LT6fQ9
      0Xkrl8vdbQk3xL2iE9au1lW9G+12+z1RAgBr8mm1FPeKTlibWkVDmGBdIwwgWNfUzQCqWqNU
      KlGt1QAVpVKmolQRo24J1jJ1+wboP3ca9GaSmQJ7trRybjCEWi6w+9BD2PSioBGsTepmAFVV
      sdlsZHIlpqen6N7Ri7Mc5kJ4nj0b3aiqSq1Wo1pdvq/HWkFVVaGzzqxVrXUzQE1V0el06Kih
      qJ+27asgXdMxRJKW7nez1hA6689a1Fo3A1SVCvFYjHxJobu7nQsXzqAqZfYc3ogsy4sJ8fdC
      Uvy9krx/r+iEtau1bgbYc+ABarUakiwjS3D4kAeQkNbgQQsEl6mbASRJQqPRLP4vy5oV1hYI
      1gbi8SxY1wgDCNY1wgCCdY0wgGBdIwwgWNcIAwjWNcIAgnWNMIBgXSMMIFjXCAMI1jXCAIJ1
      jTCAYF0jDCBY19StN+j40EXS+QrjE1M8+dgBzl4YoaYo7H/gQcw64TPB2qRuBti0ZQel9DQ1
      vZNYZJItu/fhLIXoDyfp3ehCVdXFtMi1jtBZf9aq1roOjDVwKUDPvvuJDp9DliRkSaZWq111
      86/SSIy3xWW9a517RSesXa11M4CSi1MxeDBpJBoaGui7dBGpnGPrvo7FVEiNRnNV0sxa5bLW
      tc69ohPWrta6GUA2Oti70w2Axd1Er9FBTdZiMqy9gxYILlM/A2h0V1QpSRjNlnqFFgjuGKJ6
      RrCuEQYQrGuEAQTrGmEAwbpGGECwrhEGEKxrhAEE6xphAMG6RhhAsK4RBhCsa4QBBOsaYQDB
      ukYYQLCuqVtv0PhUgMBUArvbxwa/hdMXhqhWVfYfPoRRs/bmhhIIoJ45wcEIFpsdh8PB1OQ4
      m3fsxVEMMhhOsrvDCazdrKClEDrrz1rUWjcD5ApFevffz/mTJzG5LNhkGZ1Wh1JRqNVqi+mQ
      a3GqzGu5V6ZzvVd0wtrVWjcDNHldRKIzVDU6mvw+AmOjhIvzbNp1PxqNZjElTqutaxryHUGW
      ZaGzzqxVrcsqUko5Pnj/XSKzSWqqhMnq4Mgjj+C1m5dcf8vOPcRjMfx792Ix6tDp5qlq2nGa
      REqkYO2ytAGqFd5+6y06evZy/5FGtDIk4tP85p03eeTJZ3GYdddtIkkyvobGxf/tLs8dEy0Q
      1IulDSBrefLZr5GfD/N//tt/g6TRsPm+x/id3/raKssTCO4sS7cDSBKSJBELDtF63zP8D3/+
      5/R99Naa/IoXCG6HFRvCzHYvo58c46+//7dUS0X++gd/RyJXWS1tAsEdZ8XPct+GbTx0XxDV
      1czuKjz04IHV0iVYI3z00UeMjY3R1NTErl27OH78OPl8ni996Uu0t7ejKAqvvfYaWq2WZ555
      hnfeeYdYLEZ7ezuHDx9eNZ21Wo3vfve7tLe388ADD3D+/HnS6TQ9PT309PRQrVb5+c9/TqlU
      4vHHHyebzXLu3LmVS4CJc+8ymDJRLeY4fuLt1ToWwS3yT//0T7z00kucOXOGkZERXnzxRf7m
      b/6GbDYLQDgc5vvf/z4vv/wypVKJo0eP8otf/IJAILBszJGREdxuNzt37sTtdvPcc8/R3t7O
      /Pw8sFC9eeTIkcU2nmg0yje/+U3GxsZW5Zgvk06nyeVybNq0Ca/Xy2OPPcaRI0eYmZkBIBQK
      0dLSwu/93u9x4sQJPvzwQ5qamlY2gK+ti9nBD3nrtV/jae1ZlQO5HWZmZvjJT37CK6+8Qrlc
      5uzZs7z++uuLv1erVV555RV++tOfkkwmARgYGLhqnXuZyclJdDodXV1dbNq0ieeeew6n00mh
      UAAWDCBJEl1dXRSLRcLhMCaTCb/fv2zM559/nvvvv5+XX36ZYrHIyZMnCQaD2O12YMEARqMR
      WHgKazQapE+/IZcjEAjwve99j1/96lcUi0XeeOMNfvCDHyz+XiwW+eEPf8gPf/hDLly4wNtv
      v82LL77Ij370IxRFWTKm3W7nT/7kTygWi5w4cYLp6WnefPNNPB7PYkyTyYRWq6VSqTA/P8+2
      bdtWNoDR2cQ/+4Nv8af//f/EH3/rt1ZadU0wOjrKrl27eOyxx9BoNDQ2NlIsFhd/n5ycxOVy
      8fWvf53XXnuNYrHIuXPnSKfTd1F1/fizP/szHnvsMX72s5+hKAo//vGP6enpwev1AnD48GG+
      /e1vMzIywvDwMHq9ngcffJCf//znS8ZTVZW+vj7y+TyyLBONRmlqaqK3t5dAIMCFCxdQFIW5
      uTnS6TSVSoVKpUIgEFhxHNDp6Wn0ej1tbW0YDAaeeuqpRY0AyWSSlpYWfv/3f5+zZ8+SSCTY
      t28fGo1m2dbkmZkZQqEQiqIgyzKxWIxHH32U4eFh+vr6aGlp4dKlS5w+fZrNmzfT3t5OIpFA
      88ILL7ywVMBKfp7//d/+O/KqnsFTx7k4VWH31g03eCmWiFep3PHWQLPZTDgc5t1332Xz5s34
      fD4GBwfZunUrADqdjhMnThCLxZidnSWZTHLgwAHC4TDbt29fjHP5aQELT7WXX36ZwcFB/H4/
      sViM9957D5/Ph9lsplarcezYMS5evMjIyAidnZ2cPn0ag8GA2bx0o2G9uFbn+++/T7lcJh6P
      E41G8Xq9+Hw+jEYjFy5cIJVKEY1GmZycZNeuXYyPj2M0GikUCvT0XF/CS5KE0+lkaGiIw4cP
      4/f7CQQCaLVaDh48iKIo6PV6+vv7sdvtaLVa9u/fz/j4+OJDaCmtbW1t7Nmzh7Nnz6LVanG5
      XFddJ7PZTCAQYHh4mGQyidfrJZ1OUywW2bJlCzrd9e1QVquV2dlZTCYTe/fupVgsMjExweOP
      P46iKHg8HhoaGigWi+zbt4/u7m6CweDyBpge+oiQvJn/+neepPe+fbz04t/zyJGHb/lirYYB
      5ubm6OrqYm5uDpfLhcPhWDyxMzMz2Gw2urq6sFgsyLJMKpUiHA5z6tQpDhw4sFiUX3mxstks
      U1NTfPWrX8VgMPDSSy/xta99jV//+tfs2rULSZLo7OyktbWVgYEBGhsbuXTpEiaT6aqn2p3g
      Sp2SJOFyuchkMjz00EP4fD5qtRqVSgWPx4PZbKa1tZVMJsO2bdtoamqiq6uLbDbLoUOHkOWl
      XwZ0Oh1tbW2YzWY0Gg3Nzc00NDQgSRJ2ux2dTkdHRwcdHR04nU50Oh2tra3XlQBXah0YGGBk
      ZIRQKMTOnTsZHR3l9OnTNDQ0MDg4SENDA6lUinw+T09PD6FQCL/fTyQSYdu2bRgMhut0SpKE
      3+/H5/MtGre9vR1ZlrHb7UiShM1mo7GxEUmSkGWZ5ubm5WuBdAYL4f63+G70AqCCae237Fos
      Ft555x0aGhrw+/28+uqrFAoFTp06hVarxe12c+7cOarVKg8//DBarRZFUejt7cXhcCwbN51O
      86Mf/YgHHngAi8WC2Wy+rk3k+PHjPProo/h8Prq6uu70oS6Jw+FYPA6DwXCVAS/ffN3d3YvL
      LBbLkk/+y6jzs6iBwVvWI/mbkdo2X7f88gNpx44d2Gw2yuUyzz//PGazGb/fj06nY9OmTWzY
      sAGv18v27duZnp5m586dWK3WJfdV++RdqNx8Ff2yBvB17uNf/c/3fXYwK3zUrBXcbjdf/vKX
      F/+/8u/LPPTQQ1f9r9VqV7xhtVotzz//PFNTU1y6dIlKpUKtVkOW5UUTVCoVEokEPp+vTkdy
      86jBEdSp4C1vL3VuR/I1Xb0wk4LhvlvXBEsaQJZlmpo+21dLS8t161z+eIWFa9Da2rryvgbP
      Q6lw0xqXNUAhlyFXKC3+L2n1eF3LPyXvOpUKxKO3vr3eCJ7ra0Oy2SyvvvoqAE8//fRi9eLl
      umafz0cul+PJJ58EIBgMcvr0aWDBkCvVsNQTdX4WJoZvPUBjG1xrgDuAms9R+81rt7y95PAg
      H3ykbnqWNUBopJ+3336DYM7Gni4/pwaj/Pt/9T/Wbcd1p1yEwfO3vr3Tu6QBfD4f3/jGNxb/
      37NnD3v27Fk2zOX3YcEyKBUIjd7y5qo/X0cxKxhg655DWHVlfvLeJAf393J28NcrBhq7dIFk
      oYrZ7qaz2cmZC5dQVJn9B/ajv4dTItXU/EJZfitIEpLDVVc9gvqyYpVMy7YHeCr7AWf7hvnO
      d769YqD43Bx2XwttLc1MhQZo39qLoxBkKJJmZ/vSr07Hjx9ncnKSI0eOcObMGcLhMAcPHuTA
      gQMkEgnefPNNSqUSBw4cIBgMkslkMBgMfOUrX7n1I75ZPjgGt5rJpNXCM9+srx5BXVnRAKnp
      AO+c+Bi90Uji/Q/Y9F98ddl19x54gEqlxJlPPsbrNWLVaTFipJApUa1WF1MiL1e3JRIJUqnU
      4gfRl7/8Zf7hH/6B7du3U6lUsFgsfP3rX+fMmTPMzs7yyCOPMDU1xYkTJ6gs8bUvKcptpbfV
      1BrVT+NWq9XFfWiAWy2/VBWUW6iZuFGu1CnXaresE6Baq6Feo1WqVW9r2BC1pi7qu6xVqiq3
      pVNVWfr6o95S3BXvmXR8ksYdR/i9p/bxebdBNDKJ0+NFkmX8Hg+hUJjpXJSNPQeuSonU6XSo
      qsobb7zBkSNHOHbsGLIsMz09jd/vx2KxfHqgKq+++ip6vZ4nnniCaDTKqVOncLvdSzaEcJvt
      C7IkI38a97JOuPW3HwBJYmmtdeJKnbVl6vFvOJYsI12jVZU1t3f8srSob/Haa7TczmzBkgTa
      Jc5p9RZttXJXCIuT4Y/f4Hvf+x4/fPHVFQM1Ni60kvbu24e7oYNWlw7Phm14LdffmKqq0tPT
      w8jICOFwmGKxyHvvvcfDDy80tH3yySeMjY0Rj8fp7OwkmUwSDofZvXs3sVjslg50raGqKseP
      HyedTjMxMcEvf/lL3nvvvavaF6anp/noo4+oVCqcOHGCo0ePks/X9yNwvbPiY9Pd2s2h3h7i
      mSIG68qzPupNVjo7Oxf/9zYuX28ryzL79u1DVVX27t2L2Wzm6aefXmys6ejowGKxsGfPHjKZ
      DE6nk7a2Nubm5vjd3/3dmzm+NUsoFOLkyZNs3ryZ8+fP8+yzzy62RMPCK8N7771HqVRiy5Yt
      bN68mXK5zIkTJ3jqqafuovIvFiuWAIFz7zIRS2Np6WJ86NZbBJfjcvO9JEm43e7F5ZdfhXbv
      3s3u3btxu900Nzezc+fOO96/ZjVQFIVPPvmEAwcW8iuam5s5evQo//iP/7jY2evMmTPs3LkT
      nU6H0+lEq9Vy7Ngx9u/ffzelf+FYuQRoaKN5o43Zix+QLl3f/+KWSc5BNHTr23sawN9cPz2r
      zNTUFPF4nMHBQVKpFM8++yz79u3jF7/4BcViEbPZzIULF3A6nZw6dYoHH3yQo0eP8gd/8Afo
      9fq7Lf8LxYoG8GzYxdc2AI/feie4JSnkYXry1rfXG+5pA7S3t/Od73yHwcFBfD4f586dIxqN
      4vf7yeVy9Pf380d/9EdUq1VaWlooFotYrVaOHj3K3r17aW9vv9uH8IVhRQPkU3PkMeF13Puv
      HWuRy91/Dx06dNXyy90nNBoN999/P8Bd62D3RWdFAxRSUf7xzUv84e//NjpZRqsVg1zVAzWX
      WegScKtYHUgrJJwIbpwVDVCtSRTnJ/i/f/CfsPo28M+ef3a1dH2xOf8hzN1Gde4jXwHrGu6Y
      eA+xogEqxRy7j3yNxw9sWS09AsGqsqIBzDYHr/z135CIHMHmbuTpIwdXS5dAsCqsPDCWq5k/
      /dM/ptltYTJyG33tBYI1yrIlQH5+ipdePUYyU+DDM+f5ly/8y9XUJRCsCsuWAKVsgkA4hqeh
      BZfbw4aW1clsEghWk2VLAFf7dv7yX2whEZ/GIuX525++xHe+9TurqU0guOMsXQKoNc7857d4
      /fhJVL2NLz3+DAe7PPx/R9+hpNxOZ1aBYG2xdAkgyew99Cjh8SF+884xChWVrp6dfOXprWjl
      5ftdT44OMFPWsXtTE+f6BlBULfv27VlxG4HgbrJ8Nagk07a5h7bNNzYmaLWYYjpTQ1UzTIXy
      NHfuxJafYCiaYXuLvV56BYK6smI7QDYeZiCSIz5yGsnbxTNfWm54dJX+gRG2bdtB/8AA5YqC
      Ra/DIpnJzRSoVi1XpUTKtSq305Bfq6mL6YuXuZdSIjXqraXvXaaqVFErFZESeQV3JCUyMnyG
      S+EKU7Ea5eG3VzBAFY2sYbC/j2B4iubdPUSnYySy07Rv2ntdSiTy7fVjkWVpMX3xsyO5d1Ii
      1dscZEyj1SDpdCIl8gpuNSVyxbumY8ch3vr4J/zW155jpH+lQZe0bO/dg1qrsXFzF06HAyk0
      RsW3iQbr2psaUyC4zMpJ8XMxtFY3mVSWJ5448rnBJFnG5VyYFb65o/Nz1hYI7j4rlpv+jTv4
      3a8+ysev/4x/8Zcv8OMXX6VcFRPlCb44rFgCREfP8uKxT9j/9Lf49o5uPnz3NdL5Cl6bSMsT
      fDFYOSWyqQOn7iQn332dswPD/PF/tfZniREIboaVR4W48Buw+dj18LMU5kRvUMEXjxVLgMaO
      HppqSaKnjlHRigwkwReP5btDZ1OUtA52dTnY1dWBrBXv/YIvHsvPDzA6wPmhz8buMbia+e0n
      H1pudYHgnmTZb4CtvYf4xte/gqaSw+htwqjeuVGOBYK7xYofweNn3yVl24Jdp/LR6Y9WS5NA
      sGqsPEFGVy/zx/+O8UyKLfueWC1NAsGqsbwB1BqBsTE8/gY8je08/ejhVZQlEKwOy74CpaJD
      /PJ4P7/93PM8/fBO/vpv/99VlCUQrA7LlgDpWASDp4G52DSoBnKZ+GrqEghWhWUN4G7fzs7o
      OUZHF6a0fOqpZ1YMFB4fYi6VRzba2N7ZwoULF6lIBu7bsxPNPTDJtmB9sqwBLO4mnnnmxidO
      bt3YTUtN4aOPTzM5kce3YRu23ATD0zl6mpae3l4guNusWAtUzKUIhKY+/U/C09CE3710lwil
      mOHc+T4wOCmXC7iNBuwaK4MzWap+k0iJvAKREnkbMVczJXJm5BS/fHeCA9uaef3YO9htNv7k
      n/8lHvP1m2ULCvcdOMTZD09i9PqZjc+TzcZoad0lUiKvQaRE3kbM1Zwl0mAyUy6VcDmsSGYv
      rR4D+dLSk0YrpSx9fX00dW2jtW0zJiVBxdpCi130IRKsXVZ8bJpcrRzalWQuXeEv/vy/o5JJ
      4ncufUP7mtrxNX02dU/HZjGkumDts2IJoDdZ0NZKTIxe4hevvk1TS7Oo0RF8oVjRAEq5wHw6
      SxUNDR7XamkSCFaNFV+BNFoTDz3+Zbx2A+PhmdXSJBCsGssaoFLMcub0x/QNjvHxmfN86w//
      mC1ipBPBF4xlX4Hmg3387JXfsPeBx2hpb+PRQ72rqUsgWBWWNUDDlkP8H//LP6eWDGPXa/lP
      f/+r1dQlEKwKK34DGMwODh15gkNHnkBRlNXSJBCsGjfcfKi9zZZWgWAtcnvt52u1WbQAAAsu
      SURBVALBPY4wgGBdIwwgWNcIAwjWNcIAgnVN3ap2ZqeCTM7Mo7c46dnUTP/FfiqyiT07tyKJ
      DnSCNUrdSgCLw0tvby/5+DSh4AiO5i46bBVGYoV67UIgqDt1KwGMRj19Zz7G3tSOko/iajTh
      NjgZjaapeg0iJfIKRErkbcRczZTIm2Hg7Gkau3bhd5iJBbPMJ1IUs3Ea/dtESuQ1iJTI24i5
      mimRN4PeZGQqMExf/zDuts1I2WnSWjftLkO9diEQ1J26lQDd26/uLdq5dXu9QgsEdwxRDSpY
      1wgDCNY1wgCCdY0wgGBdIwwgWNcIAwjWNcIAgnWNMIBgXSMMIFjXCAMI1jXCAIJ1jTCAYF0j
      DCBY19TNAJVijvPnLqIAarXCYP8F+gZHUdXb6VEuENxZ6maAbDZHtVSkCsyERtC72/BpMgTm
      ivXahUBQd+qWD+Dy+pmOTAOQyedx+224zR4+jqbocOlFSuQViJTI24i5VlMir8RmNpPO5Khm
      E3i93SIl8hpESuRtxFyrKZGRiVES2QyX+vpxtnRRjE8wXTGzyWOs1y4EgrpTtxKgZUMnLRs+
      m0KmZ8fueoUWCO4YohpUsK4RBhCsa4QBBOsaYQDBukYYQLCuEQYQrGuEAQTrGmEAwbpGGECw
      rrkjBlCrFYYGLnBxcEx0hxasae6IAWZCI2idbXjltOgOLVjT3BEDZPJ5nA4bDQ0eZuOpO7EL
      gaAu3JHu0FazmUwmRy230B1aIFir3JESoLG9i/xsgKmSSXSHFqxp7kgJIGl0bNvZ+/krCgR3
      mTtigGupVqvUajVyuRxarRZqgLdl2fVVVV15bmGNERKJq9dVKrcX02hajJnL5T5b3rQJ1KVz
      mC7Xby0bVZav1wngbACj7da15otQqV2t0+JE3bRj+W1UdSGdahkkWb+o9bOF2tuLaXVff04r
      ZdSt+1YI+TnHbrYgLXFO1c7dUFVuOqakrlI9ZT6fR6PRYDB8/qR5n3sSrkBRlAVT1TFmIpHA
      5XLdUEzghuLeqM7LcW8k5o3qvJmYtdqC2eUbSLG8U+d0Na/9qpQAN8vNzCyv0dxYfvGdmK3+
      Tui82bj1jnkz+75XzulKMdekAW6GO3ER7gRCZ/2ph9ZV7wpRyUT59Vsnb3i0gWohxXvvn+D0
      qU8Ym4wtuU6tUuCtN94gU7rx8QbUaoFXf/Uay2+i8sm7rxFOFG445oXTH3L27Bk+OdOHUlv6
      CIf6TtE/GrrhmACD5z5gYHxm2d9nJ0c58XHfDZ/TUjzAW785xScff8z0fGbJdZTsDL8+9sFN
      jQqRm4/y5nsnWebQUatljr/xGsli9YZjfvTBcc6eOc25/tFltKicOfEmwXj2hmNWCilef/0d
      KjXQvPDCCy/c8Ja3QaVSQZZlAmNBGpw6yiYPUyP9mFw+hgcuYjHJnD7TTyA0gcvbhEG3ULzV
      yjnysoXeHVsZvtRPa2vrdbGTsRDoLOQqUJsLktI4KEyPkVJkBvvOE5+eIK068dg/+/6IBYYx
      +72k8xIeh+mqeMViEZ2aJ1U1kZmbw22RGAnPY5dzjMWKTI9dJBKdJpYq0ej97L12Oj5Hb+8e
      TEqCSF6Hx3ZtFbDKZDSGUizQ2ODmfN8IDX4XFy8OUkjNMBaMEJyapa254bNNaiUmZwuUcwma
      m5uu02kyGQkEJjFoqzi9DfRfOE9DYwP9ff1ItRz9g+MMBkJsav/svFXSM+DpZmdXMwP9A7S2
      NF93TgOjAbx2LUWDh9mxfnQOHxOD/RhNMqfP9BEKB7E6GzAZPnuJCAUCmAw6dDY3Jv3VryfF
      YhElO0tFayNbVJAzUeaqJqpzE8SLGkb7zxGLBklWbXivuB5zyTS9vb0UZicom3xYDVfHrRZS
      zJe0ZBMJfA4dA+MzOA0VRqbSxIKDBIMBFIMHh0W/uE00MIrJYaOMcbVLAJXwZIhEOsP40BgN
      bhuR2BxlRSUSiLDrwH46Gt3LPD0ldFrt9U8BVWVkZIJCOc/E6Ci+9g6i42NE53Noi/M0btrG
      7q528srVj/qRUIR8MkUwMLqk0tB4gLlEgmA4hN7iJJ+OMxmN0+iGiq6RPTu3oapLP8lsNgv5
      Qum65aVEkOBUilgkzFxBg1zNk4iMY/Q2k8jD3r17MF0z5E0iEmB6LsFkKEyuev15qZZzhCYn
      ScWmCEyn8BghMjuHqjMTnUmxd99ePHbzkjolSYtGXmLsI1UlFA6RzhcYuzRIg8/FVHSGfLlK
      dDzCjgMH2NjspXLFdVJrChPBMKXcHIOjk0vub2g4QKGcIzg+hru5lVhogsnZLOZaEnfrFnq3
      bKCoLHVOJWw2E4Xi9QNiTYUCzM4nCYZCSAY7pWyC6NQMfo+Okuxh28ZmCsoVOlWVsWCYQjrJ
      2FhgdQ1QSkZo7rmffQcOYySPraGV2MDH2Bo7sFt0RKJxZuPzAEQikcXtKqUiidkoFXRUyzlm
      YkmSsRlyZYVarYLB2cS+Pfto95rI14zISgLZYMVqNjE7E2MmNouqQjQSoQaoSharbyN77ttP
      k01DvpAnGpsnGYuQLQOoZBQdDx06wMM72phIKLjNElOZGnaLg2J6hkRijkJJYW4mSrGycNFq
      VYVcNsOFoTAbmt1EIhFqSpmp6VkARoJJnn3mCI986RDRyQgdfgcfDMXZ3GinVsqRTCZIZQqU
      MnPE0wVAJZoo8sjDh3nmsf2MjUWZjkSoVktEogsx56cn2XX/ozz0+JPkZ0I0bdzEwEcf0tDS
      il6qEk+kmJtPUq0Uicbii+e0WCwQDY+hM7spJGdJZMvMRCJUgHJmBn/nfey9736s2jJmbxPz
      Y+ex+tpw2XVMRmaZjc8tXicVyCdjtG/bx32HHsWgzFPKJphN5YlFIyycnhpaq5f9e+6js9FG
      WtGjUbOoWiMWs5n52Rlis3Fqn16nyzZQlDLZTJKRcIomt4FIZJpqMc30XAZUlURB4ksPHuTR
      3g0E4kX8Vg2BhILLZqeUjRObXTjmqcvXvpLG2byFvQcO49JXVvcVqIYOn8+NViNjt1rQGszY
      HG4afS4sdgfFVJxMvoCvsQUNNUwmE5JGRzGbpFjTsn1rJ1CjWpPQ6SQ0egMaScVmd6LXa7Hb
      bMhaHS67HZe3AbPFiqaaJ5tOIdkbcRpljCYTqlLF4XKj12qwO2xIshYkCb1WRqs3oZTzeLx+
      jAY9JrsTrari9rhwOt2YjCasZpm5RIaarMPnsqMzGNHIEgYNzMSTbOjcisOsR1EUTEYj1ZqK
      yWjAZLZgNBjQ6o2Y9DocXi9umw2rxYzTYWE2nqCkKLQ0+EDWYdBpMJitWIwGZL0Fs0FCI8sY
      TUaqVRUJFaPFicthQZY0WK1mjGYbDrcHn8uGw+lgPhYjW6rQ0dJMrQZGowFZbyYzN43W7KRr
      QwuqWkXS6JGpYTCZUGsSLpfj0+tkRWMwYXc48ftcmO1OSuk5srk8Ln8LennhOqlIOJ1OtLKE
      1WpFr9Oiylo0soreaKJczOH1NmEw6LDZbGg0WjwOKw5vI2azBa1aIpNOgcWHy6zFaDIhAZJS
      Zj5VYMv27Ri1EopSxWTQUUWDUa/BbLVhNOgx2j69Tl4PTocLs8mEzawlkUhgcDVh04PJZKKm
      VHF6vOg0Mnabbe20A5RySYZGgxhsLro2tiPXoTKiWikxMjxEWTWwbXs32jrVWQeG+0kVanRu
      2YrVeP0wfbfCzGSAaDxF84ZO/E5rXXSm52YIhKM4/S10NPvqorOcTzM4EkBvcdK9ueOGr9NK
      WmtKmZGhQYqqnm09W9Bp6lMTFRy9RKaio2drJ8uFXDMGWEvcTAPT3eRe0QlrV6vICBOsa/5/
      oqo8NW0XK34AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map of Delays by Airports' width='192'>
      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
      P+DnwP8AwLpIrqGIm4MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Worst Routes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Worst Routes (TimeZone Incl)' width='192'>
      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
      Gpih5b+jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorstRoute For Time Zone' width='192'>
      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
      LRZLpbhWerYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
